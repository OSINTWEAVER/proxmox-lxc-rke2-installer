---
- name: Install Rancher Management UI Only (Alternative Method)
  hosts: rke2_servers
  become: true
  gather_facts: true
  vars:
    admin_user: "{{ cluster_admin_user | default('adm4n') }}"
    rke2_data_path: "/var/lib/rancher/rke2"
    rancher_hostname: "{{ rancher_hostname | default('rancher.local') }}"
    rancher_bootstrap_password: "{{ rancher_bootstrap_password | default('') }}"

  tasks:
    - name: Wait for any lingering namespace cleanup
      ansible.builtin.pause:
        seconds: 30
      when: inventory_hostname == groups['rke2_servers'][0]

    - name: Force delete stuck cattle-system namespace (if exists)
      ansible.builtin.shell: |
        kubectl get namespace cattle-system -o json | jq '.spec.finalizers = []' | kubectl apply -f - || true
        kubectl delete namespace cattle-system --ignore-not-found=true --force --grace-period=0 || true
      environment:
        KUBECONFIG: /etc/rancher/rke2/rke2.yaml
      when: inventory_hostname == groups['rke2_servers'][0]
      failed_when: false

    - name: Wait for namespace deletion to complete
      ansible.builtin.shell: |
        for i in {1..30}; do
          if ! kubectl get namespace cattle-system 2>/dev/null; then
            echo "Namespace deleted successfully"
            exit 0
          fi
          echo "Waiting for namespace deletion... attempt $i/30"
          sleep 2
        done
        echo "Namespace still exists, proceeding anyway"
      environment:
        KUBECONFIG: /etc/rancher/rke2/rke2.yaml
      when: inventory_hostname == groups['rke2_servers'][0]
      failed_when: false

    - name: Install Rancher Management UI (simplified approach)
      ansible.builtin.shell: |
        # Add repos
        helm repo add rancher-stable https://releases.rancher.com/server-charts/stable || true
        helm repo add jetstack https://charts.jetstack.io || true
        helm repo update
        
        # Install cert-manager if not present
        if ! kubectl get namespace cert-manager 2>/dev/null; then
          kubectl create namespace cert-manager
          helm install cert-manager jetstack/cert-manager \
            --namespace cert-manager \
            --set installCRDs=true \
            --set global.leaderElection.namespace=cert-manager \
            --timeout=600s \
            --wait
        fi
        
        # Create cattle-system namespace
        kubectl create namespace cattle-system --dry-run=client -o yaml | kubectl apply -f -
        
        # Install Rancher without webhook validation
        helm install rancher rancher-stable/rancher \
          --namespace cattle-system \
          --set hostname="{{ rancher_hostname }}" \
          --set bootstrapPassword="{{ rancher_bootstrap_password }}" \
          --set replicas=1 \
          --set ingress.tls.source=rancher \
          --set resources.requests.cpu=250m \
          --set resources.requests.memory=512Mi \
          --set resources.limits.cpu=500m \
          --set resources.limits.memory=1Gi \
          --set extraEnv[0].name=CATTLE_SYSTEM_DEFAULT_REGISTRY \
          --set extraEnv[0].value="" \
          --set useBundledSystemChart=true \
          --timeout=600s \
          --wait
      environment:
        KUBECONFIG: /etc/rancher/rke2/rke2.yaml
      when: inventory_hostname == groups['rke2_servers'][0]
